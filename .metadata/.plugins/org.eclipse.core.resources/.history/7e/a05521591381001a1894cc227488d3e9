package Package;

import java.util.Stack;

import javax.swing.JOptionPane;

public class libraryPilha {
	
	private static Stack<String> pilha = new Stack<String>();
	private static Stack<String> saida = new Stack<String>();
	
	public static void nonTerminalClass(/*String posicao,*/String[] sentenca) {
	//	if (validations(sentenca) == false) return;
		for(int it = 0; it>=sentenca.length; it++) {
			System.out.println("o que eu quero: " + sentenca);
		}
		try {
			for(int int = 0; i>=sentenca.length; i++) {
				sentenca = sentenca.replaceAll(" ", "");
				String[] sentencaSplit = sentenca.toString().split("->");
				sentencaSplit = sentenca.toString().split("|");
				
				System.out.println(sentencaSplit);
				
				for(int i = 0; i<sentencaSplit.length; i++) {
					String t = sentencaSplit[i];
					pilha.push(t);
					if (t.contains("-") || (t.contains(">"))) {
						pilha.pop();
					}	
					while(!pilha.empty()) {
			            System.out.println("[" + pilha.pop() + "]");
			        }
					/*if(pilha.peek().toUpperCase() == t) {
						if (pilha.peek().equals("S")) {
							if(!pilha.isEmpty()) {
								pilha.pop();
								if(t.toLowerCase() == t) {
									saida.push(t);
								}else {
									
								}
									
				        	}
						}else {
							while(!pilha.empty()) {
					            System.out.println("[" + pilha.pop() + "]");
					        }
							return;
						}
					}else {
						JOptionPane.showMessageDialog(null, "Começo Invalido");
						return;
					}*/
				}
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Erro:" + e.getMessage());
		}

	}
	
	
	public static boolean validations(Object sentenca) {
		boolean ok = false;
		try {
			if (!sentenca.toString().contains("->")) {
				throw new Exception("Formato valido: X->Xx|Xx");
			}	
			return ok;
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Erro:" + e.getMessage());
			return ok=false;
		}
	}
}
